Sending video data back and forth thoughts:

Almost certainly will require its own class on the client side. We'll also need some code to prevent commands from repeating, such that if the server tells us the video is playing, we don't keep calling a playVideo function, preventing the user from pausing. On the other end, we'll need a server-side class that stores the "universal" state of the video, as in, it knows whether the video should be playing or not, and can command the clients to get in line. This code will conceptually be straightforward. Every time the server is given some new state of affairs, it updates all the clients at the moment they ping it. Probably means the client will have to hold data about whether or not it's been updated, and the server will change that value, saying either "Okay you're up to date" or "No, you're off track." Might require keeping track of a sequential count of some sort so the server can say, "We are on update 17. Are you on update 17? No? You're on 13? Well, jump to 17."

So we need to:

* Issues right now:
    ** When a user is released, if their ID is in the buffer ID, buffer ID should be cleared.
    ** Alternatively, consider not pausing the video when it buffers. Just, if the video's time is outside the safe zone, jump to it. What's really annoying is when a video goes from buffering to pause for no reason after a user seeks to a new time on the timeline.
    ** When you skip in the timeline it pauses sometimes for some reason
    ** Sometimes when you press play, it pauses again instantly
    ** Can't play live video, because the code is set up to skip the time to 0 automatically so all videos start from the beginning. (Actually seems to be an issue with the browser on vnc)
    ** Obviously need to make it able to take all other types of youtube links pasted in.
    ** When paused, you can't seek. Why? It just jumps back to the existing time and then plays.
* 


Thoughts:
The video is playing.
- Try to pause
TELL SERVER TO 2 scripts.js:106:21
PLAY IT IS TRUE scripts.js:125:29
TELL SERVER TO 1
- Try to pause again
TELL SERVER TO 2
[Pause was successful]

** Try making the onsuccess of SendStateToServer call alignwithserver(response)
** I believe a race condition is happening here, or something like it. When you press a button, sometimes that happens exactly as pingVideoSetting is happening. That means even though you tell the server to pause it, pingVideoSetting reports back that the server's universal state is PLAYING, which it is at the time that it arrives. When sending info to the server (on button presses, pauses, plays, seeks, etc), we need to pause all other code until the result comes back. So we need an AJAX promise to be executed either on the SendStateToServer code, or on the pingVideoSetting. Probably on pingVideoSetting.


Done:
* Right now it can only play for 5 seconds, then it snaps right back to whatever time you skipped to.
    ** Consider changing code on client so it only changes time if the state is buffer. Because seeking/scrubbing across the timeline seems to always generate the buffer event.
    ** FIXED
* Write all of this code in a way that it doesn't matter what the USERID or any of that other stuff is.
* Write client-side code to read the state of the video on the server, and change the state of our video IF it doesn't match. (Will later have to account for if url doesn't match too)
* Have the server receive the message that a video just got played, and change the value of a variable that tells other clients if a video is playing or not.
* If that new state is play, tell the server that the client just played the video.
* Create a function that reacts to a video player state change based on the new state.
    ** Should also question if the new state is different from the current state.